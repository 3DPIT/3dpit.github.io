{"componentChunkName":"component---src-templates-blog-post-js","path":"/DataBase/2022-06-29-데이터분석을-위한-SQL레시피-2일차/","result":{"data":{"site":{"siteMetadata":{"title":"3DPIT Study Blog","author":"[KyeongMinPark]","siteUrl":"https://3dpit.github.io","comment":{"disqusShortName":"","utterances":"3dpit/3dpit.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0e581cd6-3bc6-52bf-a9e3-dfa0733dbbc8","excerpt":"2022-06-29-데이터분석을-위한-SQL레시피-2일차 목차 01.‘6강’ 여러 개의 값에 대한 조작 01.1 날짜/시간 계산하기 01.2 IP 주소 다루기 02. 하나의 테이블에 대한 조작 02.1 그룹의 특징 잡기 02.2 그룹 내부의 순서 02.3 세로 기반 데이터를 가로 기반으로 변환하기 목표범위 : 03.6강 여러 개의 값에 대한 조작(5.날짜/시간 계산하기) ~ 03.7강 하나의 테이블에 대한 조작(3.세로기반 데이터를 가로 기반으로 변환하기까지) 01.‘…","html":"<h2 id=\"2022-06-29-데이터분석을-위한-sql레시피-2일차\" style=\"position:relative;\"><a href=\"#2022-06-29-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EC%9D%84-%EC%9C%84%ED%95%9C-sql%EB%A0%88%EC%8B%9C%ED%94%BC-2%EC%9D%BC%EC%B0%A8\" aria-label=\"2022 06 29 데이터분석을 위한 sql레시피 2일차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2022-06-29-데이터분석을-위한-SQL레시피-2일차</h2>\n<h2 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h2>\n<blockquote>\n<p>01.‘6강’ 여러 개의 값에 대한 조작</p>\n<blockquote>\n<p>01.1 날짜/시간 계산하기</p>\n<p>01.2 IP 주소 다루기</p>\n</blockquote>\n<p>02.<code class=\"language-text\">7강</code> 하나의 테이블에 대한 조작</p>\n<blockquote>\n<p>02.1 그룹의 특징 잡기</p>\n<p>02.2 그룹 내부의 순서</p>\n<p>02.3 세로 기반 데이터를 가로 기반으로 변환하기</p>\n</blockquote>\n</blockquote>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 목표범위 : 03.6강 여러 개의 값에 대한 조작(5.날짜/시간 계산하기) ~ 03.7강 하나의 테이블에 대한 조작(3.세로기반 데이터를 가로 기반으로 변환하기까지)</li>\n</ul>\n<h2 id=\"016강-여러-개의-값에-대한-조작\" style=\"position:relative;\"><a href=\"#016%EA%B0%95-%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A1%B0%EC%9E%91\" aria-label=\"016강 여러 개의 값에 대한 조작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.‘6강’ 여러 개의 값에 대한 조작</h2>\n<h3 id=\"011-날짜시간-계산하기\" style=\"position:relative;\"><a href=\"#011-%EB%82%A0%EC%A7%9C%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"011 날짜시간 계산하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.1 날짜/시간 계산하기</h3>\n<ul>\n<li>\n<p>사전준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> mst_users_with_dates<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> mst_users_with_dates <span class=\"token punctuation\">(</span>\n  user_id        <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> register_stamp <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> birth_date     <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> mst_users_with_dates\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'U001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2016-02-28 10:00:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2000-02-29'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2016-02-29 10:00:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2000-02-29'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2016-03-01 10:00:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2000-02-29'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> mst_users_with_dates<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>실습 쿼리</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-11 미래 또는 과거의 날짜/ 시간을 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tuser_id<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">as</span> register_stamp<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">timestamp</span> <span class=\"token operator\">+</span> <span class=\"token string\">'1 hour'</span>::<span class=\"token keyword\">interval</span> <span class=\"token keyword\">as</span> after_1_hour<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">timestamp</span> <span class=\"token operator\">-</span> <span class=\"token string\">'30 minutes'</span>::<span class=\"token keyword\">interval</span> <span class=\"token keyword\">as</span> before_30_minutes<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> register_date<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span>register_stamp::<span class=\"token keyword\">date</span> <span class=\"token operator\">+</span> <span class=\"token string\">'1 day'</span>::<span class=\"token keyword\">interval</span><span class=\"token punctuation\">)</span>::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> after_1_day<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span>register_stamp::<span class=\"token keyword\">date</span> <span class=\"token operator\">-</span> <span class=\"token string\">'1 month'</span>::<span class=\"token keyword\">interval</span><span class=\"token punctuation\">)</span>::<span class=\"token keyword\">date</span> before_1_month\n<span class=\"token keyword\">from</span> mst_users_with_dates<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>날짜 데이터들의 차이 계산하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-12 두 날짜의 차이를 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tuser_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">current_date</span> <span class=\"token keyword\">as</span> today<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> register_date<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">current_date</span> <span class=\"token operator\">-</span> register_stamp::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> diff_days\n<span class=\"token keyword\">from</span> mst_users_with_dates<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>사용자의 생년월일로 나이 계산하기</strong></p>\n<ul>\n<li>실습쿼리</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-13 age 함수를 사용해 나이를 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tuser_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">current_date</span> <span class=\"token keyword\">as</span> today<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> register_date<span class=\"token punctuation\">,</span>\n\tbirth_date::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> birth_date<span class=\"token punctuation\">,</span>\n\textract<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span> <span class=\"token keyword\">from</span> age<span class=\"token punctuation\">(</span>birth_date::<span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_age<span class=\"token punctuation\">,</span>\n\textract<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span> <span class=\"token keyword\">from</span> age<span class=\"token punctuation\">(</span>register_stamp::<span class=\"token keyword\">date</span><span class=\"token punctuation\">,</span> birth_date::<span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> register_age\n<span class=\"token keyword\">from</span> mst_users_with_dates<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">---6-14 연 부분 차이를 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tuser_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">current_date</span> <span class=\"token keyword\">as</span> today<span class=\"token punctuation\">,</span>\n\tregister_stamp::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> register_date<span class=\"token punctuation\">,</span>\n\tbirth_date::<span class=\"token keyword\">date</span> <span class=\"token keyword\">as</span> birth_date<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token operator\">-</span> birth_date::<span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">365</span> <span class=\"token keyword\">as</span> current_age<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span>register_stamp::<span class=\"token keyword\">date</span><span class=\"token operator\">-</span>birth_date::<span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">365</span> <span class=\"token keyword\">as</span> register_age \n<span class=\"token keyword\">from</span> mst_users_with_dates<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- 6-15 날짜를 정수로 표현해서 나이를 계산하는 함수</span>\n<span class=\"token keyword\">select</span> floor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">20160228</span><span class=\"token operator\">-</span><span class=\"token number\">20000229</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> age<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- 6-16 등록 시점과 현재 시점 나이를 문자열로 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tuser_id<span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>register_stamp<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> register_date<span class=\"token punctuation\">,</span>\n\tbirth_date<span class=\"token punctuation\">,</span>\n\tfloor<span class=\"token punctuation\">(</span><span class=\"token comment\">-- 등록시점 나이 계산하기</span>\n\t\t<span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">replace</span><span class=\"token punctuation\">(</span>substring<span class=\"token punctuation\">(</span>register_stamp<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">-</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">replace</span><span class=\"token punctuation\">(</span>birth_date<span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10000</span>\n\t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> register_age<span class=\"token punctuation\">,</span>\n\tfloor<span class=\"token punctuation\">(</span><span class=\"token comment\">-- 현재시점 나이 계산하기</span>\n\t\t<span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">replace</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">text</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">-</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">replace</span><span class=\"token punctuation\">(</span>birth_date<span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10000</span>\n\t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_age\n<span class=\"token keyword\">from</span> mst_users_with_dates<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"012-ip-주소-다루기\" style=\"position:relative;\"><a href=\"#012-ip-%EC%A3%BC%EC%86%8C-%EB%8B%A4%EB%A3%A8%EA%B8%B0\" aria-label=\"012 ip 주소 다루기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.2 IP 주소 다루기</h3>\n<ul>\n<li>\n<p>일반적인 웹 서비스는 로그 데이터에 사용자 IP 주소로 저장</p>\n<ul>\n<li>보통 IP주소를 로그로 저장할 때는 문자열로 저장</li>\n</ul>\n</li>\n<li>\n<p><strong>IP 주소 자료형 활용하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-17 inet 자료형을 사용한 IP주소 비교 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tcast<span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.1'</span> <span class=\"token keyword\">as</span> inet<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.2'</span> <span class=\"token keyword\">as</span> inet<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> lt<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.1'</span> <span class=\"token keyword\">as</span> inet<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'192.168.0.1'</span> <span class=\"token keyword\">as</span> inet<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> gt<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token comment\">--- 6-18 inet 자료형을 사용해 IP 주소 범위를 다루는 쿼리</span>\n<span class=\"token keyword\">select</span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.1'</span> <span class=\"token keyword\">as</span> inet<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.0/8'</span> <span class=\"token keyword\">as</span> inet<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> is_contained<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>정수 또는 문자열로 IP주소 다루기</strong></p>\n<ul>\n<li>IP주소를 정수 자료형으로 변환하기</li>\n<li>\n<p>정수 자료형으로 변환하면 숫자 대소 비교등이 가능해짐</p>\n<ul>\n<li>아래는 텍스트 자료형으로 정의된 IP 주소에 있는 4개의 10진수 부분(점으로 구분된 각각의 값)을 정수 자료형으로 추출</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-19 IP주소에서 4개의 10진수 부분을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tip<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ip_part_1<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ip_part_2<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ip_part_3<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ip_part_4\n<span class=\"token keyword\">from</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token string\">'192.168.0.1'</span> <span class=\"token keyword\">as</span> ip<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> t<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- 6-20 IP주소를 정수 자료형 표기로 변환하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tip<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">24</span>\n\t<span class=\"token operator\">+</span>cast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">16</span>\n\t<span class=\"token operator\">+</span>cast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">8</span>\n\t<span class=\"token operator\">+</span>cast<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">0</span>\n\t<span class=\"token keyword\">as</span> ip_integer\n<span class=\"token keyword\">from</span> \n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token string\">'192.168.0.1'</span> <span class=\"token keyword\">as</span> ip<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> t<span class=\"token punctuation\">;</span>\\</code></pre></div>\n<ul>\n<li>IP 주소를 0으로 메우기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-21 IP주소를 0으로 메운 문자열로 변환하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tip<span class=\"token punctuation\">,</span>\n\tlpad<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">||</span>lpad<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">||</span>lpad<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">||</span>lpad<span class=\"token punctuation\">(</span>split_part<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> ip_padding\n<span class=\"token keyword\">from</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token string\">'192.168.0.1'</span> <span class=\"token keyword\">as</span> ip<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> t<span class=\"token punctuation\">;</span>\n\t</code></pre></div>\n<ul>\n<li>위에 처럼 10진수를 0으로 메워서 고정 길이 문자열을 만들면, 문자열 상태로 대소 비교 등을 할 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02code-classlanguage-text7강code-하나의-테이블에-대한-조작\" style=\"position:relative;\"><a href=\"#02code-classlanguage-text7%EA%B0%95code-%ED%95%98%EB%82%98%EC%9D%98-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A1%B0%EC%9E%91\" aria-label=\"02code classlanguage text7강code 하나의 테이블에 대한 조작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.<code class=\"language-text\">7강</code> 하나의 테이블에 대한 조작</h2>\n<ul>\n<li>\n<p><strong>데이터 집약</strong></p>\n<ul>\n<li>레코드의 수를 세주는 함수</li>\n<li>레코드에 저장된 값의 합계, 평균, 최대, 최소를 계산해주는 함수</li>\n<li>통계처리를 사용해 통계 지표를 출력해주는 함수</li>\n</ul>\n</li>\n<li><strong>데이터 가공</strong></li>\n</ul>\n<h3 id=\"021-그룹의-특징-잡기\" style=\"position:relative;\"><a href=\"#021-%EA%B7%B8%EB%A3%B9%EC%9D%98-%ED%8A%B9%EC%A7%95-%EC%9E%A1%EA%B8%B0\" aria-label=\"021 그룹의 특징 잡기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.1 그룹의 특징 잡기</h3>\n<ul>\n<li>\n<p>집약 함수란?</p>\n<ul>\n<li>여러 레코드를 기반으로 하나의 값을 리턴하는 함수</li>\n<li>\n<p>예를 들어 모든 레코드의 수를 리턴해주는 COUNT 함수</p>\n<ul>\n<li>값의 합계를 리턴해주는 SUM함수 등이 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>테이블 전체의 특징량 계산하기</strong></p>\n<ul>\n<li>대소 비소가 가능한 자료형</li>\n<li>숫자, 문자열, 타임스탬프 등 </li>\n<li>사전 준비</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> review<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> review <span class=\"token punctuation\">(</span>\n    user_id    <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> product_id <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> score      <span class=\"token keyword\">numeric</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> review\n<span class=\"token keyword\">VALUES</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'U001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> review<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>테이블 전체의 특징량 계산하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-1 집약 함수를 사용해서 테이블 전체의 특징량을 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> total_count<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> user_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> user_count<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> product_count<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sum<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> avg<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> max<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">min</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> min\n<span class=\"token keyword\">from</span>\n\treview<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>그루핑한 데이터의 특징량 계산하기</strong></p>\n<ul>\n<li>데이터를 조금 더 작게 분할하고 싶은 경우 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-2 사용자 기반으로 데이터를 분할하고 집약함수를 적용하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tuser_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> total_count<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> product_count<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sum<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> avg<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> max<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">min</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> min\n<span class=\"token keyword\">from</span>\n\treview\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span>\n\tuser_id<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>집약 함수를 적용한 값과 집약 전의 값을 동시에 다루기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-3 윈도 함수를 사용해 집약 함수의 결과와 원래 값을 동시에 다루는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tuser_id<span class=\"token punctuation\">,</span>\n\tproduct_id<span class=\"token punctuation\">,</span>\n\tscore<span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 개별 리뷰 점수</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> avg_score<span class=\"token punctuation\">,</span> <span class=\"token comment\">--전체 평균 리뷰 점수</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> user_id<span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> user_avg_score<span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 사용자 평균 리뷰 점수</span>\n\tscore <span class=\"token operator\">-</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> user_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> user_avg_score_diff <span class=\"token comment\">-- 개별 리뷰 점수와 사용자 평균 리뷰 점수의 차이</span>\n<span class=\"token keyword\">from</span> review<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"022-그룹-내부의-순서\" style=\"position:relative;\"><a href=\"#022-%EA%B7%B8%EB%A3%B9-%EB%82%B4%EB%B6%80%EC%9D%98-%EC%88%9C%EC%84%9C\" aria-label=\"022 그룹 내부의 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.2 그룹 내부의 순서</h3>\n<ul>\n<li>\n<p><strong>ORDER BY 구문으로 순서 정의하기</strong></p>\n<ul>\n<li>윈도함수에서는 OVER구문 내부에 ORER BY구문을 사용할 수 있음</li>\n<li>ROW_NUMBER 함수는</li>\n<li>유일한 순위 번호를 붙이는 함수</li>\n<li>RANK, DENSE_RANK 함수는</li>\n<li>같은 순위의 레코드가 있을 때 순위 번호를 같게 붙임</li>\n<li>RANK의 경우 같은 순위의 레코드 뒤의 순위 번호를 건너뜀</li>\n<li>DENSE_RANK함수의 경우 순위 번호를 건너뛰지 않음</li>\n<li>LAG함수, LEAD함수는 </li>\n<li>현재 행을 기준으로 앞의 행 또는 뒤의 행의 값을 추출하는 함수</li>\n</ul>\n</li>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> popular_products<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> popular_products <span class=\"token punctuation\">(</span>\n  product_id <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> category   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> score      <span class=\"token keyword\">numeric</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> popular_products\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'A001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'A002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'A003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'A004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drama'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drama'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drama'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drama'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>실습 쿼리</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-3 윈도 함수의 ORDER BY 구문을 사용해 테이블 내부의 순서를 다루는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tproduct_id<span class=\"token punctuation\">,</span>\n\tscore<span class=\"token punctuation\">,</span>\n\trow_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--점수로 유일한 순위를 붙임</span>\n\trank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rank<span class=\"token punctuation\">,</span> <span class=\"token comment\">--같은 순위를 허용해서 순위를 붙임</span>\n\tdense_rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dense_rank<span class=\"token punctuation\">,</span> <span class=\"token comment\">--같은 순위가 있을 때 같은 순위 다음에 있는 순위를 건너 뛰고 순위를 붙임</span>\n\tlag<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> lag1<span class=\"token punctuation\">,</span><span class=\"token comment\">-- 현재행 보다 앞에 있는 행의 값 추출하기</span>\n\tlag<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> lag2<span class=\"token punctuation\">,</span>\n\tlead<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> lead1<span class=\"token punctuation\">,</span><span class=\"token comment\">-- 현재행 보다 뒤에 있는 행의 값 추출하기</span>\n\tlead<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> lead2\n<span class=\"token keyword\">from</span> popular_products \n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>order by 구문과 집약 함수 조합하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-5 order by 구문과 집약 함수를 조합해서 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tproduct_id<span class=\"token punctuation\">,</span>\n\tscore<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--점수 순서로 유일한 순서를 붙임</span>\n\trow_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 순위 상위부터의 누계 점수 계산하기</span>\n\t<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">current</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> cum_score<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 현재 행과 앞 뒤의 행이 가진 값을 기반으로 평균 점수 계산하기</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span> <span class=\"token keyword\">following</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> local_avg<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--순위가 높은 상품 ID 추출하기 </span>\n\tfirst_value<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">following</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> first_value<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 순위가 낮은 상품 ID 추출하기</span>\n\tlast_value<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">following</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> last_value\n<span class=\"token keyword\">from</span> popular_products\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>윈도 프레임 지정에 대해서</p>\n<ul>\n<li>프레임 지정이란 </li>\n<li>현재 레코드 위치를 기반으로 상대적인 윈도를 정의하는 구문</li>\n<li>프레임 지정 구문</li>\n<li>\n<p><code class=\"language-text\">ROWS BETWEEN start AND end</code></p>\n<ul>\n<li>start와 end에는 </li>\n<li><code class=\"language-text\">CURRENT ROW(현재의 행)</code></li>\n<li><code class=\"language-text\">n PRECEDING(n행 앞)</code></li>\n<li><code class=\"language-text\">n FOLLOWING(n행 뒤)</code></li>\n<li><code class=\"language-text\">UNBOUNDED PRECEDING(이전 행 전부)</code></li>\n<li><code class=\"language-text\">UNBOUNDED FOLLOWING(이후 행 전부)</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-6 윈도 프레임 지정별 상품 ID를 집약하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tproduct_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--점수 순서로 유일한 순위를 붙임</span>\n\trow_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 가장 앞 순위부터 가장 뒷 순위까지의 범위를 대상으로 상품 ID집약하기</span>\n\tarray_agg<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">following</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> whole_agg<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 가장 앞 순위부터 현재 순위 까지의 범위를 대상으로 상품 ID집약하기</span>\n\tarray_agg<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">current</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> cum_agg<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 순위 하나 앞과 하나 뒤까지의 범위를 대상으로 상품 ID집약하기</span>\n\tarray_agg<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span> <span class=\"token keyword\">following</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> local_agg\n<span class=\"token keyword\">from</span> popular_products\n<span class=\"token keyword\">where</span> category <span class=\"token operator\">=</span> <span class=\"token string\">'action'</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>partition by와 order by 조합하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-7 윈도 함수를 사용해 카테고리들의 순위를 계산하는 함수</span>\n<span class=\"token keyword\">select</span>\n\tcategory<span class=\"token punctuation\">,</span>\n\tproduct_id<span class=\"token punctuation\">,</span>\n\tscore<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--카테고리별로 점수 순서로 정렬하고 유일한 순위를 붙임</span>\n\trow_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> category <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--카테고리별로 같은 순위를 허가하고 순위를 붙임</span>\n\trank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> category <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rank<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">-- 카테고리별로 같은 순위가 있을 때</span>\n\t<span class=\"token comment\">-- 같은 순위 다음에 있는 순위를 건너 뛰고 순위를 붙임</span>\n\tdense_rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> category <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> dense_rank \n<span class=\"token keyword\">from</span> popular_products\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> category<span class=\"token punctuation\">,</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>각 카테고리의 상위 n개 추출하기</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-8 카테고리들의 순위 상위 2개까지의 상품을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span>\n<span class=\"token comment\">-- 서브 쿼리 내부에서 순위 계산</span>\n<span class=\"token punctuation\">(</span>\n<span class=\"token keyword\">select</span>\n\tcategory<span class=\"token punctuation\">,</span>\n\tproduct_id<span class=\"token punctuation\">,</span>\n\tscore<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--카테고리별로 점수 순서로 유일한 순위를 붙임</span>\n\trow_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> category <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rank \n<span class=\"token keyword\">from</span> popular_products\n<span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> popular_products_with_rank\n<span class=\"token comment\">-- 외부 쿼리에서 순위 활용해 압축하기</span>\n<span class=\"token keyword\">where</span> rank <span class=\"token operator\">&lt;=</span><span class=\"token number\">2</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> category<span class=\"token punctuation\">,</span> rank<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- 7-9 카테고리별 순위 최상위 상품을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> \n\tcategory<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--카테고리별로 순위 최상위 상품ID 추출하기</span>\n\tfirst_value<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> category <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> score <span class=\"token keyword\">desc</span>\n\t<span class=\"token keyword\">rows</span> <span class=\"token operator\">between</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">preceding</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">unbounded</span> <span class=\"token keyword\">following</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">as</span> product_id\n<span class=\"token keyword\">from</span> popular_products<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"023-세로-기반-데이터를-가로-기반으로-변환하기\" style=\"position:relative;\"><a href=\"#023-%EC%84%B8%EB%A1%9C-%EA%B8%B0%EB%B0%98-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%B0%80%EB%A1%9C-%EA%B8%B0%EB%B0%98%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"023 세로 기반 데이터를 가로 기반으로 변환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.3 세로 기반 데이터를 가로 기반으로 변환하기</h3>\n<ul>\n<li>\n<p><strong>행을 열로 변환하기</strong></p>\n<ul>\n<li>GROUP BY dt</li>\n<li>MAX(CASE ~)구문 사용</li>\n<li>\n<p>해당 쿼리는 날짜별로 지표들이 하나씩 존재하므로 표현식의 조건 true 하나뿐</p>\n<ul>\n<li>그래서 그 하나를 MAX함수로 추출</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> daily_kpi<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> daily_kpi <span class=\"token punctuation\">(</span>\n  dt        <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> indicator <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> val       <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> daily_kpi\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'impressions'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1800</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sessions'</span>   <span class=\"token punctuation\">,</span>  <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'users'</span>      <span class=\"token punctuation\">,</span>  <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-01-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'impressions'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-01-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sessions'</span>   <span class=\"token punctuation\">,</span>  <span class=\"token number\">700</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-01-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'users'</span>      <span class=\"token punctuation\">,</span>  <span class=\"token number\">250</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> daily_kpi<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> purchase_detail_log<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> purchase_detail_log <span class=\"token punctuation\">(</span>\n  purchase_id <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> product_id  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> price       <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> purchase_detail_log\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token number\">100001</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100001</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100001</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100002</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100002</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100003</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> purchase_detail_log<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>행을 열로 변환하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-10 행으로 저장된 지표 값을 열로 변환하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tdt<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> indicator <span class=\"token operator\">=</span> <span class=\"token string\">'impressions'</span> <span class=\"token keyword\">then</span> val <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> impressions<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> indicator <span class=\"token operator\">=</span> <span class=\"token string\">'sessions'</span> <span class=\"token keyword\">then</span> val <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sessions<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> indicator <span class=\"token operator\">=</span> <span class=\"token string\">'users'</span> <span class=\"token keyword\">then</span> val <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> users\n<span class=\"token keyword\">from</span> daily_kpi\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> dt\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> dt<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>행을 쉼표로 구분한 문자열로 집약하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 7-11 행을 집약해서 쉼표로 구분된 문자열로 변환하기</span>\n<span class=\"token keyword\">select</span>\n\tpurchase_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">--상품 ID를 배열에 집약하고 쉼표로 구분된 문자열로 변환하기</span>\n\tstring_agg<span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> product_idx<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> amount\n<span class=\"token keyword\">from</span> purchase_detail_log \n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> purchase_id\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> purchase_id<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"데이터분석을 위한 SQL레시피 2일차","date":"June 29, 2022"}}},"pageContext":{"slug":"/DataBase/2022-06-29-데이터분석을-위한-SQL레시피-2일차/","previous":{"fields":{"slug":"/DataBase/2022-06-28-데이터분석을-위한-SQL레시피-1일차/"},"frontmatter":{"title":"데이터분석을 위한 SQL레시피 1일차"}},"next":{"fields":{"slug":"/Algorithm/2022-06-30-2021-KAKAO-BLIND-RECRUITMENT-순위검색/"},"frontmatter":{"title":"2021 KAKAO BLIND RECRUITMENT 순위검색"}}}},"staticQueryHashes":["2486386679","3128451518"]}