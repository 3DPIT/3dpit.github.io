{"componentChunkName":"component---src-templates-blog-post-js","path":"/DataBase/2022-06-28-데이터분석을-위한-SQL레시피-1일차/","result":{"data":{"site":{"siteMetadata":{"title":"3DPIT Study Blog","author":"[KyeongMinPark]","siteUrl":"https://3dpit.github.io","comment":{"disqusShortName":"","utterances":"3dpit/3dpit.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"a575b844-4272-561d-8e74-eee024fc12d5","excerpt":"2022-06-28-데이터분석을-위한-SQL레시피-1일차 목차 1. 하나의 값 조작하기 01.1 코드 값을 레이블로 변경하기 01.2 URL에서 요소 추출하기 01.3 문자열을 배열로 분해하기 01.4 날짜와 타임스탬프 다루기 01.5 결손 값을 디폴트 값으로 대치하기 2. 여러 개의 값에 대한 조작 02.1 문자열 연결하기 02.2 여러 개의 값 비교하기 02.3 2개의 값 비율 계산하기 02.4  두 값의 거리 계산하기 목표 범위: 03.5강 하나의 값 조작하기 ~ 03.…","html":"<h2 id=\"2022-06-28-데이터분석을-위한-sql레시피-1일차\" style=\"position:relative;\"><a href=\"#2022-06-28-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EC%9D%84-%EC%9C%84%ED%95%9C-sql%EB%A0%88%EC%8B%9C%ED%94%BC-1%EC%9D%BC%EC%B0%A8\" aria-label=\"2022 06 28 데이터분석을 위한 sql레시피 1일차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2022-06-28-데이터분석을-위한-SQL레시피-1일차</h2>\n<h2 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h2>\n<blockquote>\n<p>1.<code class=\"language-text\">5강</code> 하나의 값 조작하기</p>\n<blockquote>\n<p>01.1 코드 값을 레이블로 변경하기</p>\n<p>01.2 URL에서 요소 추출하기</p>\n<p>01.3 문자열을 배열로 분해하기</p>\n<p>01.4 날짜와 타임스탬프 다루기</p>\n<p>01.5 결손 값을 디폴트 값으로 대치하기</p>\n</blockquote>\n<p>2.<code class=\"language-text\">6강</code> 여러 개의 값에 대한 조작</p>\n<blockquote>\n<p>02.1 문자열 연결하기</p>\n<p>02.2 여러 개의 값 비교하기</p>\n<p>02.3 2개의 값 비율 계산하기</p>\n<p>02.4  두 값의 거리 계산하기</p>\n</blockquote>\n</blockquote>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 목표 범위: <strong>03.5강 하나의 값 조작하기</strong> ~ <strong>03.6강 여러 개의 값에 대한 조작</strong> (4.두 값의 거리 계산하기 까지)</li>\n</ul>\n<h2 id=\"01-code-classlanguage-text5강code-하나의-값-조작하기\" style=\"position:relative;\"><a href=\"#01-code-classlanguage-text5%EA%B0%95code-%ED%95%98%EB%82%98%EC%9D%98-%EA%B0%92-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"01 code classlanguage text5강code 하나의 값 조작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. <code class=\"language-text\">5강</code> 하나의 값 조작하기</h2>\n<ul>\n<li>\n<p><strong>데이터 가공해야하는 이유</strong></p>\n<ul>\n<li>다룰 데이터가 데이터 분석 용도로 상정되지 않은 경우</li>\n<li>\n<p>여러 개의 정보가 하나의 문자열로 저장되어 있는 경우</p>\n<ul>\n<li>SQL에서 다루기 어려움 그래서 데이터 분석에 적합한 형태로 미리 가공해서 저장해두어야함</li>\n</ul>\n</li>\n<li>연산할 때 비교 가능한 상태로 만들고 오류를 회피하기 위한 경우</li>\n<li>두 데이터 형식이 일치 하지 않은 경우 이를 집계하는 경우 같은 데이터 형식으로 통일하는 것이 좋음</li>\n<li>\n<p>어떤 값과 NULL을 연산하면 결과가 NULL이 되기 때문에</p>\n<ul>\n<li>미리 데이터를 가공해서 NULL이 발생하지 않도록 하는것이 좋음</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"011-코드-값을-레이블로-변경하기\" style=\"position:relative;\"><a href=\"#011-%EC%BD%94%EB%93%9C-%EA%B0%92%EC%9D%84-%EB%A0%88%EC%9D%B4%EB%B8%94%EB%A1%9C-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"011 코드 값을 레이블로 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.1 코드 값을 레이블로 변경하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> mst_users<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> mst_users<span class=\"token punctuation\">(</span>\n    user_id         <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> register_date   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> register_device <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> mst_users\n<span class=\"token keyword\">VALUES</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'U001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2016-08-26'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2016-08-26'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2016-08-27'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> mst_users<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 5-1 코드를 레이블로 변경하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tuser_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">case</span> \n\t\t<span class=\"token keyword\">when</span> register_device <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'데스크톱'</span>\n\t\t<span class=\"token keyword\">when</span> register_device <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'스마트폰'</span>\n\t\t<span class=\"token keyword\">when</span> register_device <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'애플리케이션'</span>\n\t<span class=\"token keyword\">end</span> <span class=\"token keyword\">as</span> device_name\n<span class=\"token keyword\">from</span> mst_users<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>case 구문</p>\n<ul>\n<li>case 뒤에 when &#x3C;조건식> then &#x3C;조건을 만족할 때의 값> end 형태</li>\n<li>만약 조건식에 해당하는 경우가 없는 경우 NULL이지만</li>\n<li>ELSE &#x3C;값> 형태를 사용해서 디폴트 값을 별도로 지정해줄 수 있음</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"012-url에서-요소-추출하기\" style=\"position:relative;\"><a href=\"#012-url%EC%97%90%EC%84%9C-%EC%9A%94%EC%86%8C-%EC%B6%94%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"012 url에서 요소 추출하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.2 URL에서 요소 추출하기</h3>\n<ul>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> access_log <span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> access_log <span class=\"token punctuation\">(</span>\n  stamp    <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> referrer <span class=\"token keyword\">text</span>\n<span class=\"token punctuation\">,</span> url      <span class=\"token keyword\">text</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> access_log \n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'2016-08-26 12:02:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.other.com/path1/index.php?k1=v1&amp;k2=v2#Ref1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/video/detail?id=001'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2016-08-26 12:02:01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.other.net/path1/index.php?k1=v1&amp;k2=v2#Ref1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/video#ref'</span>          <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2016-08-26 12:02:01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://www.other.com/'</span>                               <span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/book/detail?id=002'</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> access_log<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>레퍼러로 어떤 웹 페이지를 커쳐 넘어왔는지 판별하기</strong></p>\n<ul>\n<li>페이지 단위로 집계시 밀도 너무 작아 복잡</li>\n<li>호스트 단위로 집계하는 것이 일반적</li>\n<li>정규표현식으로 호스트 이름의 패턴을 추출</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 5-2 레퍼러 도메인을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tstamp<span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>referrer <span class=\"token keyword\">from</span> <span class=\"token string\">'https?://([^/]*)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> referrer_host\n<span class=\"token keyword\">from</span> access_log<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>URL에서 경로와 요청 매개변수 값 추출하기</strong></p>\n<ul>\n<li>URL을 가공하여 정보 뽑아내기 </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 5-3 URL 경로와 GET 매개변수에 있는 특정 키 값을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tstamp<span class=\"token punctuation\">,</span>\n\turl<span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>url <span class=\"token keyword\">from</span> <span class=\"token string\">'//[^/]+[^?#]+'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> path<span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>url <span class=\"token keyword\">from</span> <span class=\"token string\">'id=([^&amp;]*)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> id\n<span class=\"token keyword\">from</span> access_log<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"013-문자열을-배열로-분해하기\" style=\"position:relative;\"><a href=\"#013-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%B6%84%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"013 문자열을 배열로 분해하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.3 문자열을 배열로 분해하기</h3>\n<ul>\n<li>\n<p>세부적으로 분해해서 사용하는 경우가 많음</p>\n<ul>\n<li>예를들어 영어 문장을 공백으로 분할해서 하나하나의 단어로 구분</li>\n<li>쉼표로 연결된 데이터를 잘라 하나하나의 값을 추출하는 경우</li>\n<li>아래의 예시는 URL 경로를 슬래시로 분할해서 계층을 추출하는 경우</li>\n</ul>\n</li>\n<li>\n<p>사전 준비하기</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> access_log <span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> access_log <span class=\"token punctuation\">(</span>\n  stamp    <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> referrer <span class=\"token keyword\">text</span>\n<span class=\"token punctuation\">,</span> url      <span class=\"token keyword\">text</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> access_log \n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'2016-08-26 12:02:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.other.com/path1/index.php?k1=v1&amp;k2=v2#Ref1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/video/detail?id=001'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2016-08-26 12:02:01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.other.net/path1/index.php?k1=v1&amp;k2=v2#Ref1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/video#ref'</span>          <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2016-08-26 12:02:01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://www.other.com/'</span>                               <span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/book/detail?id=002'</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> access_log<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>실습 쿼리</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 5-4 URL경로를 슬래시로 분할해서 계층을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tstamp<span class=\"token punctuation\">,</span>\n\turl<span class=\"token punctuation\">,</span>\n\tsplit_part<span class=\"token punctuation\">(</span>substring<span class=\"token punctuation\">(</span>url <span class=\"token keyword\">from</span> <span class=\"token string\">'//[^/]+([^?#]+)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> path1<span class=\"token punctuation\">,</span>\n\tsplit_part<span class=\"token punctuation\">(</span>substring<span class=\"token punctuation\">(</span>url <span class=\"token keyword\">from</span> <span class=\"token string\">'//[^/]+([^?#]+)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> path2\n<span class=\"token keyword\">from</span> access_log<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"014-날짜와-타임스탬프-다루기\" style=\"position:relative;\"><a href=\"#014-%EB%82%A0%EC%A7%9C%EC%99%80-%ED%83%80%EC%9E%84%EC%8A%A4%ED%83%AC%ED%94%84-%EB%8B%A4%EB%A3%A8%EA%B8%B0\" aria-label=\"014 날짜와 타임스탬프 다루기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.4 날짜와 타임스탬프 다루기</h3>\n<ul>\n<li>\n<p>PostgreSQL에서는 <code class=\"language-text\">CURRENT_TIMESTAMP</code>의 리턴 값으로 타임존에 적용된 것이 나옴</p>\n<ul>\n<li>타임존이 없는 타임스탬프의 경우는 <code class=\"language-text\">LOCALTIMESTAMP</code>를 사용하는 것이 좋음</li>\n</ul>\n</li>\n<li>\n<p>실습 쿼리</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 5-5 현재 날짜와 타임스탬프를 추출하는 쿼리</span>\n<span class=\"token comment\">---- current_timestamp</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">current_date</span> <span class=\"token keyword\">as</span> dt<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">current_timestamp</span> <span class=\"token keyword\">as</span> stamp\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">---- localhimestamp</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">current_date</span> <span class=\"token keyword\">as</span> dt<span class=\"token punctuation\">,</span>\n\tlocaltimestamp <span class=\"token keyword\">as</span> stamp\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>지정한 값의 날짜/ 시각 데이터 추출하기</strong></p>\n<ul>\n<li>자료형 변환 하는 것 CAST()</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 5-6 문자열 날짜 자료형, 타임스탬프 자료형으로 변환하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tcast<span class=\"token punctuation\">(</span><span class=\"token string\">'2022-06-28'</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dt<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span><span class=\"token string\">'2022-06-28 10:39:00'</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">timestamp</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stamp\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>날짜/ 시각에서 특정 필드 추출하기</strong></p>\n<ul>\n<li>타임스탬프 자료형의 데이터에서 년과 월등의 특정 필드 값을 추출시</li>\n<li>EXTRACT함수 사용</li>\n<li>substring, substr을 사용할 수도 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 5-7 타임스탬프 자료형의 데이터에서 연, 월, 일 등을 추출하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tstamp<span class=\"token punctuation\">,</span>\n\textract<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span> <span class=\"token keyword\">from</span> stamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\textract<span class=\"token punctuation\">(</span><span class=\"token keyword\">month</span> <span class=\"token keyword\">from</span> stamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">month</span><span class=\"token punctuation\">,</span>\n\textract<span class=\"token punctuation\">(</span><span class=\"token keyword\">day</span> <span class=\"token keyword\">from</span> stamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">day</span><span class=\"token punctuation\">,</span>\n\textract<span class=\"token punctuation\">(</span><span class=\"token keyword\">hour</span> <span class=\"token keyword\">from</span> stamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">hour</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'2022-06-28 10:41:00'</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">timestamp</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> t\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- 5-8 타임스탬프를 나타내는 문자열에서 연, 월, 일 등을 추출하는 쿼리</span>\n<span class=\"token comment\">---- substring</span>\n<span class=\"token keyword\">select</span> \n\tstamp<span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">month</span><span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">day</span><span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">hour</span><span class=\"token punctuation\">,</span>\n\tsubstring<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> year_month\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'2022-06-28 10:45:00'</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> stamp<span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> t<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">---- substr</span>\n<span class=\"token keyword\">select</span> \n\tstamp<span class=\"token punctuation\">,</span>\n\tsubstr<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\tsubstr<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">month</span><span class=\"token punctuation\">,</span>\n\tsubstr<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">day</span><span class=\"token punctuation\">,</span>\n\tsubstr<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">hour</span><span class=\"token punctuation\">,</span>\n\tsubstr<span class=\"token punctuation\">(</span>stamp<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> year_month\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cast<span class=\"token punctuation\">(</span><span class=\"token string\">'2022-06-28 10:45:00'</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> stamp<span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> t<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"015-결손-값을-디폴트-값으로-대치하기\" style=\"position:relative;\"><a href=\"#015-%EA%B2%B0%EC%86%90-%EA%B0%92%EC%9D%84-%EB%94%94%ED%8F%B4%ED%8A%B8-%EA%B0%92%EC%9C%BC%EB%A1%9C-%EB%8C%80%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"015 결손 값을 디폴트 값으로 대치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.5 결손 값을 디폴트 값으로 대치하기</h3>\n<ul>\n<li>\n<p>문자열 또는 숫자를 다룰 때 중간에 NULL이 들어있는 경우 주의</p>\n<ul>\n<li>이유: NULL + 문자열 = NULL</li>\n<li>NULL + 숫자 = NULL이 됨</li>\n<li>해결: COALESCE 함수를 이용하여 0으로 대치해서 해결</li>\n</ul>\n</li>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> purchase_log_with_coupon<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> purchase_log_with_coupon <span class=\"token punctuation\">(</span>\n  purchase_id <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> amount      <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> coupon      <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> purchase_log_with_coupon\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'10001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3280</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'10002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4650</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'10003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3870</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> purchase_log_with_coupon<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>사용 쿼리</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 5-9 구매액에서 할인 쿠폰 값을 제외한 매출 금액을 구하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tpurchase_id<span class=\"token punctuation\">,</span>\n\tamount<span class=\"token punctuation\">,</span>\n\tcoupon<span class=\"token punctuation\">,</span>\n\tamount <span class=\"token operator\">-</span> coupon <span class=\"token keyword\">as</span> discount_amount1<span class=\"token punctuation\">,</span>\n\tamount <span class=\"token operator\">-</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>coupon<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> discount_amount2\n<span class=\"token keyword\">from</span>\n\tpurchase_log_with_coupon\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"02-code-classlanguage-text6강code-여러-개의-값에-대한-조작\" style=\"position:relative;\"><a href=\"#02-code-classlanguage-text6%EA%B0%95code-%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A1%B0%EC%9E%91\" aria-label=\"02 code classlanguage text6강code 여러 개의 값에 대한 조작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. <code class=\"language-text\">6강</code> 여러 개의 값에 대한 조작</h2>\n<ul>\n<li>\n<p>데이터 분석시 여러 값을 집약해서 하나의 값을 만들거나</p>\n<ul>\n<li>다양한 값을 비교하는 경우가 많음</li>\n</ul>\n</li>\n<li>\n<p><strong>새로운 지표 정의하기</strong></p>\n<ul>\n<li>웹사이트에서 방문한 사용자 수 중에서 특정한 행동( 클릭 또는구매 등)을 실행한 사용자의 비율을 구해서</li>\n<li>CTR(클릭 비율), CVR(컨버전 비율)이라고 부르는 지표를 정의하고 활용하는 경우가 매우 많음</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"021-문자열-연결하기\" style=\"position:relative;\"><a href=\"#021-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\" aria-label=\"021 문자열 연결하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.1 문자열 연결하기</h3>\n<ul>\n<li>문자열 연결시 사용하는 CONCAT 함수 , || 연산자</li>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> mst_user_location<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> mst_user_location <span class=\"token punctuation\">(</span>\n  user_id   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> pref_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> city_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> mst_user_location\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'U001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'서울특별시'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'강서구'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'경기도수원시'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'장안구'</span>  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'U003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'제주특별자치도'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'서귀포시'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> mst_user_location<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>사용 쿼리</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-1 문자열을 연결하는 쿼리</span>\n<span class=\"token comment\">---- concat() 사용</span>\n<span class=\"token keyword\">select</span> \n\tuser_id<span class=\"token punctuation\">,</span>\n\tconcat<span class=\"token punctuation\">(</span>pref_name<span class=\"token punctuation\">,</span> city_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pref_city\n<span class=\"token keyword\">from</span>\n\tmst_user_location\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">---- || 연산자 사용</span>\n<span class=\"token keyword\">select</span> \n\tuser_id<span class=\"token punctuation\">,</span>\n\tpref_name<span class=\"token operator\">||</span>city_name <span class=\"token keyword\">as</span> pref_city\n<span class=\"token keyword\">from</span>\n\tmst_user_location\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"022-여러-개의-값-비교하기\" style=\"position:relative;\"><a href=\"#022-%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EA%B0%92-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0\" aria-label=\"022 여러 개의 값 비교하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.2 여러 개의 값 비교하기</h3>\n<ul>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> quarterly_sales<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> quarterly_sales <span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">year</span> <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> q1   <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> q2   <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> q3   <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> q4   <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> quarterly_sales\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token number\">2015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2016</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81000</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> quarterly_sales<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>분기별 매출 증감 판정하기</strong></p>\n<ul>\n<li>SIGN은</li>\n<li>매개변수가 양이면 1</li>\n<li>매개변수가 0이면 0</li>\n<li>매개변수가 음이면 -1을 리턴하는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 6-2 q1, q2 컬럼을 비교하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\tq1<span class=\"token punctuation\">,</span>\n\tq2<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">case</span>\n\t\t<span class=\"token keyword\">when</span> q1 <span class=\"token operator\">&lt;</span> q2 <span class=\"token keyword\">then</span> <span class=\"token string\">'+'</span>\n\t\t<span class=\"token keyword\">when</span> q1 <span class=\"token operator\">=</span> q2 <span class=\"token keyword\">then</span> <span class=\"token string\">' '</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token string\">'-'</span>\n\t<span class=\"token keyword\">end</span> <span class=\"token keyword\">as</span> judge_q1_q2<span class=\"token punctuation\">,</span>\n\tq2 <span class=\"token operator\">-</span> q1 <span class=\"token keyword\">as</span> diff_q2_q1<span class=\"token punctuation\">,</span>\n\tsign<span class=\"token punctuation\">(</span>q2 <span class=\"token operator\">-</span> q1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sign_q2_q1\n<span class=\"token keyword\">from</span>\n\tquarterly_sales\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\t<span class=\"token keyword\">year</span>\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>연간 최대/ 최소 4분기 매출 찾기</strong></p>\n<ul>\n<li>컬럼값에서 최댓값 또는 최솟값을 찾을 때</li>\n<li>greatest, least함수를 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-3 연간 최대/ 최소 4분기 매출을 찾는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\tgreatest <span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span> q2<span class=\"token punctuation\">,</span> q3<span class=\"token punctuation\">,</span> q4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> greatest_sales<span class=\"token punctuation\">,</span>\n\tleast <span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span> q2<span class=\"token punctuation\">,</span> q3<span class=\"token punctuation\">,</span> q4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> least_sales\n<span class=\"token keyword\">from</span>\n\tquarterly_sales \n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\t<span class=\"token keyword\">year</span>\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>연간 평균 4분기 매출 계산하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-4 단순한 연산으로 평균 4분기 매출을 구하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span>q1 <span class=\"token operator\">+</span> q2 <span class=\"token operator\">+</span> q3 <span class=\"token operator\">+</span> q4<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token keyword\">as</span> average\n<span class=\"token keyword\">from</span>\n\tquarterly_sales \n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\t<span class=\"token keyword\">year</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- 6-5 COALESCE를 사용해 NULL을 0으로 변환하고 평균값을 구하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q2<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q3<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q4<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token keyword\">as</span> average\n<span class=\"token keyword\">from</span>\n\tquarterly_sales \n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\t<span class=\"token keyword\">year</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- 6-6 NULL이 아닌 컬럼만을 사용해서 평균값을 구하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q2<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q3<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q4<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>sign<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> sign<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q2<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">+</span>sign<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q3<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> sign<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>q4<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> average\n<span class=\"token keyword\">from</span>\n\tquarterly_sales \n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\t<span class=\"token keyword\">year</span> \n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"023-2개의-값-비율-계산하기\" style=\"position:relative;\"><a href=\"#023-2%EA%B0%9C%EC%9D%98-%EA%B0%92-%EB%B9%84%EC%9C%A8-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"023 2개의 값 비율 계산하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.3 2개의 값 비율 계산하기</h3>\n<ul>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> advertising_stats<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> advertising_stats <span class=\"token punctuation\">(</span>\n  dt          <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> ad_id       <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> impressions <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> clicks      <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> advertising_stats\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-04-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-04-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120000</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1200</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-04-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-04-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'001'</span><span class=\"token punctuation\">,</span>      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>     <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-04-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'002'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130000</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1400</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2017-04-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'003'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">620000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> advertising_stats<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>정수 자료형의 데이터 나누기</strong></p>\n<ul>\n<li>CTR = 클릭 / 노출 수</li>\n<li>cast ( 컬럼명 as double precision)</li>\n<li>100.0 * 의 결과는 같음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-7 정수 자료형의 데이터를 나누는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tdt<span class=\"token punctuation\">,</span>\n\tad_id<span class=\"token punctuation\">,</span>\n\tcast<span class=\"token punctuation\">(</span>clicks <span class=\"token keyword\">as</span> <span class=\"token keyword\">double</span> <span class=\"token keyword\">precision</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> impressions <span class=\"token keyword\">as</span> ctr<span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">100.0</span> <span class=\"token operator\">*</span> clicks <span class=\"token operator\">/</span> impressions <span class=\"token keyword\">as</span> ctr_as_percent\n<span class=\"token keyword\">from</span>\n\tadvertising_stats\n<span class=\"token keyword\">where</span>\n\tdt <span class=\"token operator\">=</span> <span class=\"token string\">'2017-04-01'</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\tdt<span class=\"token punctuation\">,</span> ad_id\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>0으로 나누는 것 피하기</strong></p>\n<ul>\n<li>NULL 전파를 사용하면 0으로 나누는 것을 피할 수 있음</li>\n<li>NULL전파란 NULL을 포함한 데이터의 연산 결과가 모두 NULL이 되는 SQL 성질</li>\n<li>NULLIF(컬럼명, 0) </li>\n<li>\n<p>컬럼명의 값이 0이라면 NULL</p>\n<ul>\n<li>CASE 식을 사용한 방법과 같은 결과가 됨</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-8 0으로 나누는 것을 피해 CTR을 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span>\n\tdt<span class=\"token punctuation\">,</span>\n\tad_id<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">case</span>\n\t\t<span class=\"token keyword\">when</span> impressions <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">*</span> clicks <span class=\"token operator\">/</span> impressions\n\t<span class=\"token keyword\">end</span> <span class=\"token keyword\">as</span> ctr_as_percent_by_case<span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">100.0</span> <span class=\"token operator\">*</span> clicks <span class=\"token operator\">/</span> <span class=\"token keyword\">nullif</span><span class=\"token punctuation\">(</span>impressions<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ctr_as_percent_by_null\n<span class=\"token keyword\">from</span>\n\tadvertising_stats\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\tdt<span class=\"token punctuation\">,</span> ad_id\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"024--두-값의-거리-계산하기\" style=\"position:relative;\"><a href=\"#024--%EB%91%90-%EA%B0%92%EC%9D%98-%EA%B1%B0%EB%A6%AC-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"024  두 값의 거리 계산하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.4  두 값의 거리 계산하기</h3>\n<ul>\n<li>시험을 보았을 떄 평균에서 어느 정도 떨어져 있는지</li>\n<li>\n<p>작년 매출과  올해 매출에 어느 정도 차이가 있는지 등을 거리라고 부름</p>\n<ul>\n<li>추가로 어떤 사용자가 있을때, 해당 사용자와 구매 경향이 비슷한 사용자를 뽑는 등 사용</li>\n</ul>\n</li>\n<li>\n<p>사전 준비</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> location_1d<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> location_1d <span class=\"token punctuation\">(</span>\n  x1 <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> x2 <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> location_1d\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token punctuation\">,</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token punctuation\">,</span>  <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span>  <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span>  <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> location_1d<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> location_2d<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> location_2d <span class=\"token punctuation\">(</span>\n  x1 <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> y1 <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> x2 <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">,</span> y2 <span class=\"token keyword\">integer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> location_2d\n<span class=\"token keyword\">VALUES</span>\n  <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> location_2d<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>숫자 데이터의 절댓값, 제곱 평균 제곱근(RMS) 계산하기</strong></p>\n<ul>\n<li>절대값 계산시 ABS함수(abstract)를 사용</li>\n<li>제곱 평균 제곱근은 두 값의 차이를 제곱한 뒤 제곱근을 적용해서 나오는 값</li>\n<li>제곱시 POWER 함수</li>\n<li>\n<p>제곱근 구할 때 SQRT함수를 사용</p>\n<ul>\n<li>값이 일차원인 경우 절댓값과 제곱 평균 제곱근은 같은 결과</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 6-9 일차원 데이터의 절댓값과 제곱 평균 제곱근을 계산하는 쿼리</span>\n<span class=\"token keyword\">select</span> \n\tabs<span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> abs<span class=\"token punctuation\">,</span>\n\tsqrt<span class=\"token punctuation\">(</span>power<span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rms\n<span class=\"token keyword\">from</span> location_1d\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>xy 평면 위에 있는 두 점의 유클리드 거리 계산하기</strong></p>\n<ul>\n<li>유클리드 거리는 물리적 공간에서 거리를 구할 때 사용하는 일반적인 방법</li>\n<li>\n<p>postgreSQL에는 POINT 자료형이라고 불리는 좌표를 다루는 자료구조 가 있음</p>\n<ul>\n<li>POINT 자료형 데이터로 변환 후</li>\n<li>거리 연산자 &#x3C;->를 사용하면 됨</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- sqrt(power())</span>\n<span class=\"token keyword\">select</span> \n\tsqrt<span class=\"token punctuation\">(</span>power<span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> power<span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dist\n<span class=\"token keyword\">from</span> location_2d\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--- point &lt;-> 사용  </span>\n<span class=\"token keyword\">select</span> \n\t<span class=\"token keyword\">point</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">point</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dist\n<span class=\"token keyword\">from</span> location_2d\n<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"데이터분석을 위한 SQL레시피 1일차","date":"June 28, 2022"}}},"pageContext":{"slug":"/DataBase/2022-06-28-데이터분석을-위한-SQL레시피-1일차/","previous":{"fields":{"slug":"/PoC/2022-06-27-[Prometheus]Alertmanager-알아보기/"},"frontmatter":{"title":"Prometheus Alertmanager 알아보기"}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}