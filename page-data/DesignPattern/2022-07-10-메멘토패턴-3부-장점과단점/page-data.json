{"componentChunkName":"component---src-templates-blog-post-js","path":"/DesignPattern/2022-07-10-메멘토패턴-3부-장점과단점/","result":{"data":{"site":{"siteMetadata":{"title":"3DPIT Study Blog","author":"[KyeongMinPark]","siteUrl":"https://3dpit.github.io","comment":{"disqusShortName":"","utterances":"3dpit/3dpit.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"884a5c79-f3bc-520e-b26b-61961ec99825","excerpt":"2022-07-10-메멘토패턴-3부-장점과단점 목차 01.장점 02.단점 01.장점 객체내부의 상태를 외부에 노출하지 않아도 메멘토로 캡슐화해서 객체상태의 스냅샷을 만들 수 있음 코드 자체를 유연하게 만들어줌 변경이나 추가되더라도 클라이언트 코드가 변경되지 않음 메멘토같은 객체는 언제든지 변경이 되는 경우 바뀔 수 있지만 클라이언트는 바뀔이유가 없음 careTaker역할 같은것 기존 상태를 저장하는것을 하나 또는 여러개를 저장한것을 부여한것 careTaker…","html":"<h2 id=\"2022-07-10-메멘토패턴-3부-장점과단점\" style=\"position:relative;\"><a href=\"#2022-07-10-%EB%A9%94%EB%A9%98%ED%86%A0%ED%8C%A8%ED%84%B4-3%EB%B6%80-%EC%9E%A5%EC%A0%90%EA%B3%BC%EB%8B%A8%EC%A0%90\" aria-label=\"2022 07 10 메멘토패턴 3부 장점과단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2022-07-10-메멘토패턴-3부-장점과단점</h2>\n<h2 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h2>\n<blockquote>\n<p>01.장점</p>\n<p>02.단점</p>\n</blockquote>\n<h2 id=\"01장점\" style=\"position:relative;\"><a href=\"#01%EC%9E%A5%EC%A0%90\" aria-label=\"01장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.장점</h2>\n<ul>\n<li>객체내부의 상태를 외부에 노출하지 않아도 메멘토로 캡슐화해서 객체상태의 스냅샷을 만들 수 있음</li>\n<li>\n<p>코드 자체를 유연하게 만들어줌</p>\n<ul>\n<li>변경이나 추가되더라도 클라이언트 코드가 변경되지 않음</li>\n</ul>\n</li>\n<li>메멘토같은 객체는 언제든지 변경이 되는 경우 바뀔 수 있지만 클라이언트는 바뀔이유가 없음</li>\n<li>\n<p>careTaker역할 같은것 기존 상태를 저장하는것을 하나 또는 여러개를 저장한것을 부여한것</p>\n<ul>\n<li>careTaker는 단일책임 원칙을 지키는 것 이라고 볼 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02단점\" style=\"position:relative;\"><a href=\"#02%EB%8B%A8%EC%A0%90\" aria-label=\"02단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.단점</h2>\n<ul>\n<li>\n<p>메멘토 객체가 엄첨 많은 정보가 있다면 메모리 자체에 부하를 줄 수 있고</p>\n<ul>\n<li>careTaker가 이런 오래된것을 지우고 그런 유지하는 역할을 해야할 수도 있음</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"메멘토패턴 3부 장점과단점","date":"July 10, 2022"}}},"pageContext":{"slug":"/DesignPattern/2022-07-10-메멘토패턴-3부-장점과단점/","previous":{"fields":{"slug":"/DesignPattern/2022-07-10-메멘토패턴-1부-패턴소개/"},"frontmatter":{"title":"메멘토패턴 1부 패턴소개"}},"next":{"fields":{"slug":"/Algorithm/2022-07-11-2019카카오-튜플/"},"frontmatter":{"title":"2019카카오 튜플"}}}},"staticQueryHashes":["2486386679","3128451518"]}