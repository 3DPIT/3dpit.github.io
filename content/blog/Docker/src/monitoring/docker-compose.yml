version: '2.1'

services:
  prometheus:
    image: prom/prometheus:v2.36.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/data:/prometheus
      - /etc/localtime:/etc/localtime
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=14d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - memory_net
    labels:
      group: "monitoring"
      
  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/localtime:/etc/localtime
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - memory_net
    labels:
      group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /etc/localtime:/etc/localtime
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - memory_net
    labels:
      group: "monitoring"

  grafana:
    image: grafana/grafana:8.5.5
    container_name: grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - /etc/localtime:/etc/localtime
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - '4000:3000'
    expose:
      - 4000
    networks:
      - memory_net
    labels:
      group: "monitoring"
      
  webapplication7:
    image: ${DOCKER_REGISTRY-}webapplication7
    build:
      context: .
      dockerfile: ./WebApplication7/WebApplication7/Dockerfile
    labels:
      group: "monitoring"
    environment:
      - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80      
    command: >
      sh -c ""dotnet" --additionalProbingPath /root/.nuget/fallbackpackages3 --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath /root/.nuget/fallbackpackages2  \"RemoteProcessKill.dll\" | tee /dev/console"
    ports:
    - 5169:80
    networks:
      - memory_net

networks:
  memory_net:
    name: memory_net
    driver: bridge